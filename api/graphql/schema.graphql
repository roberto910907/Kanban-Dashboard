"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

    boards(
      uuid: String @eq
    ): [Board!]! @paginate(defaultCount: 10)

    columns(
        board_id: String @eq
    ): [Column!]! @paginate(defaultCount: 10) @orderBy(column: "position", direction: ASC)

    cards(
        column_id: String @eq
    ): [Card!]! @paginate(defaultCount: 10) @orderBy(column: "position", direction: ASC)
}

type Mutation {
    createColumn(title: String!, board_id: String!): Column @create
    deleteColumn(id: String!): Column @delete

    createCard(title: String!, column_id: String!): Card @create
    updateCard(id: ID!, title: String!, description: String): Card @update
    updateCardPosition(id: ID!, position: Int): Card @update
    updateCardColumn(id: ID!, position: Int, column_id: String!): Card @update
    deleteCard(id: String!): Card @delete
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

type Board {
    id: ID!

    uuid: String!

    name: String!

    is_active: Boolean!

    created_at: DateTime!

    updated_at: DateTime!
}

type Column {
    id: ID!

    uuid: String!

    title: String!

    position: Int!

    created_at: DateTime!

    updated_at: DateTime!

    cards: [Card]! @orderBy(column: "position", direction: ASC)
}

type Card {
    id: ID!

    uuid: String!

    title: String!

    position: Int!

    description: String

    created_at: DateTime!

    updated_at: DateTime!
}
